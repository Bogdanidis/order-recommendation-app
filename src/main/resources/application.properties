# Application name and banner
spring.application.name=order-app
spring.main.banner-mode=off
# =======================================================
# = Database Connection
# =======================================================
spring.datasource.url=jdbc:mysql://localhost:3306/order_app?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=nikos
spring.datasource.password=nikos
# =======================================================
# = JPA / HIBERNATE
# =======================================================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# =======================================================
# = Connection Pool Configuration (HikariCP)
# =======================================================
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
# =======================================================
# = Performance Tuning
# =======================================================
# Batch operations configuration
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
# =======================================================
# = Flyway Configuration
# =======================================================
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.clean-disabled=false
spring.flyway.validate-on-migrate=true
# =======================================================
# = Database Initialization and Population
# =======================================================
# This controls Spring's SQL initialization
spring.sql.init.mode=never
# Database reinitialization flag
app.db.reinitialize=false
# Database creation flag
app.db.create=false
# Data population settings
app.db.populate=true
app.db.population.batch-size=100
app.db.population.retry-attempts=3
# =======================================================
# = Form Method Configuration
# =======================================================
#POST requests but also including hidden _method fields to simulate PUT and DELETE requests
spring.mvc.hiddenmethod.filter.enabled=true

# =======================================================
# = JWT Configuration
# =======================================================
auth.token.expirationInMils=3600000
auth.token.jwtSecret=36763979244226452948404D635166546A576D5A7134743777217A25432A462D
# =======================================================
# = API Configuration
# =======================================================
api.prefix=/order-api/v1

# =======================================================
# = OpenAPI / Swagger Configuration
# =======================================================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.syntaxHighlight.activated=true
# Only scan REST controllers
springdoc.pathsToMatch=/order-api/v1/**
# =======================================================
# = OAuth2 Configuration
# =======================================================
# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=220006284804-6l09mjhqhh8vopomvt39eeh6vs0smb7j.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

# GitHub OAuth2
# spring.security.oauth2.client.registration.github.client-id=your-github-client-id
# spring.security.oauth2.client.registration.github.client-secret=your-github-client-secret
# spring.security.oauth2.client.registration.github.scope=user:email,read:user

# =======================================================
# = Logging Configuration
# =======================================================
# Development logging settings (comment out in production)
logging.level.org.springframework.web=DEBUG
logging.level.com.example.order_app=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.flywaydb=DEBUG
# spring.jpa.show-sql=true


# Production logging settings (uncomment in production)
# logging.level.root=WARN
# logging.level.com.example.order_app=INFO
# logging.level.org.springframework.web=INFO
# logging.level.org.springframework.security=INFO

# =======================================================
# = Error Page Configuration
# =======================================================

# Disable Whitelabel Error Page
server.error.whitelabel.enabled=false

# =======================================================
# = Static Resource Handling
# =======================================================

# Enable static resource handling
spring.web.resources.add-mappings=true
# Set cache period for static resources (optional, in seconds)
spring.web.resources.cache.period=3600
